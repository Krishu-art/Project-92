import *as react from react;
import {text,view,stylesheet,TouchableOpacity,Button,keyboarAdvoidingView, Alert,ScrollView,Modal};
import db from config.js;
import firebase from firebase;

export default class User-SignUpScreen extends{
  constructor(){
    super();
      this.state={
    UserId = '',
    Password = '',
    first_name = '',
    last_name = '',
    contact_number = '',
    confirm_password = '',
    isModalVisible = 'false',
      }
}

userSignUp = (UserId,Password,confirm_password) =>{
if (password !== confirm_password){
  return Alert.alert("password is wrong/Kindly recheck")

}else{

firebase.auth().createUserWithUsedIdAndPassword(UserId, password)
.then((response)=>{
  db.collection('user').add({
  first_name: first_name,
  last_name: last_name,
  contact_number: contact_number,
  UserId: UserId,
});
  return Alert.alert("UserAddedSuccessfully", "", [{
    text: "OK",
              onPress: () => this.setState({ isModalVisible: false })
  };
  ])
})

.catch(function(error){
  var errorCode = error.Code
 var errorMessage = error.Message
 return Alert.alert(errorMessage)
});
}
};

userLogin = (userId,Password) =>{
  firebase.auth().createUserWithUsedIdAndPassword(UserId,password)
.then(()=>{
  return Alert.alert ("SuccessfullyLogin")
})
.catch((error)=>{
  var errorCode = error.Code
 var errorMessage = error.Message
 return Alert.alert(errorMessage)
});
}
showModal = () =>{
return(
  <Modal
  animationType = "fade"
  transparent = "true"
  visible = {this.state.ModalVisible}
  >
  <View style={styles.modalContainer}>
  <ScrollView style={{ width:"100%"}}>
  <keyboarAdvoidingView style={styles.keyboarAdvoidingView}>
  <text style={styles.modalTitle}>Registration</Text>

  <Text Input
 style = {styles.formTextInput}
 placeholder={"first_name"}
 maxLenght={12}
 onChangeText={text =>{
   this.setState({
     first_name:text
   })
 }}
  />
 
 <TextInput
 style={styles.formTextInput}
 placeholder={"last_name"}
 maxLenght={}
 onChangeText={text =>{
 this.setState({

 })
 }}

 <Text Input
 style = styles.TextInput
placeholder = "contact_number"
maxLenght= "10"
onChangeText={text =>{
  this.setState({
    lat_name:text;
  })
}}
 />

<Text Input 
style = styles.TextInput
placeholder = "UserId"
keyboardType={"User-Id"}
onChangeText={text =>{
  this.setState({
UserId: text
})
}}
/>

<TextInput
style = styles.TextInput
placeholder="password"
secureTextEntry={true}
onChangeText={text =>{
  this.setState({
  password:text;
  })
}}
/>

<Text Input
style=styles.TextInput
placeholder="confirm_password"
multiline = {true}
onChangeText={text =>{
  this.setState({
confirm_password : text
  })
}}
/>
<View style={styles.modalBackButton}>
    <TouchableOpacity
    style={styles.registerButton}
   onPress={() =>
  this.userSignUp(
  this.state.UserId,
  this.state.password,
  this.state.confirm_password
  )
  }
 >
  <Text style={styles.registerButtonText}>Register</Text>
  </TouchableOpacity>
   </View>
  <View style={styles.modalBackButton}>
  <TouchableOpacity
 style={styles.cancelButton}
  onPress={() => this.setState({ isModalVisible: false })}
    >
   <Text style={{ color: "#ff5722" }}>Cancel</Text>
  </TouchableOpacity>
</View>
 </KeyboardAvoidingView>
 </ScrollView>
</View>
</Modal>

)
}
render(){
  return(
    <View style = {styes.container}>
    <View style =({justifyContent:center, AlignItems:'center'})>
    {
      this.showModal()
    }
    </View>
    <View>
<Text style={styles.title}> Food Delivery App </Text>
   
    
    </View>

    <View>
    <Text Input
    styles={styles.loginBox}
    placeholder="abc@example.com"
    keyboardType ='user-UserId'
    onChangeText={(text)=>{
      this.setState({
        User-Id: text
      })
    }}
    />

    <Text  Input
    style = {styles.loginBox}
    secureTextEntry = {true}
    placeholder ="abc@example.com"
    keyboardType ='email-adress'
    onChangeText={(text)=>{
      this.setState({
        User-Id: text
      })
    }
    }
    />
    <Text Input
    style = {styles.loginBox}
    securityTextEntry = {true}
    placeholder = "enter Password"
    onChangeText={(text)=>{
      this.setState({
        password : text
      })
    }
    }
/>
<TouchableOpacity
style={{styles.button,{marginBottom:20, MarginTop:30}}}
onPress = {()=>{this.UserLogin(this.stateUser-Id, this.statePassword)}}>
<Text style = {styles.buttonText} > Login </Text>
</TouchableOpacity>

<TouchableOpacity
syle={styles.button}
onPress={() => this.setState({ isModalVisible:true})} >
<Text style = {styles.text} > SignUp</Text>
</TouchableOpacity>
    
    </View>
     </View>
  );
}
}

const styles = stylesheet.create({
  container:{
  flex:1,
  backgroundColor : '#F88E85',
  },
  Title:{
    fontWeight : '95',
    Color: 'black',
    fontSize: '90',
    paddingBottom: 30,
  },
  loginBox: {
 height: 280,
 width: 50,
 borderBottomWidth: 1,
 borderColor: "purple",
 fontSize: 30,
 margin: 10,
 paddingCenter: 20,
  },
  KeyboardAvoidingView: {
  flex:1,
  justifyContent: "center",
  alignItems: "center",
  backgroundColor: "black",
  },
  modalTitle: {
    fontWeight : '95',
    Color: 'black',
    fontSize: '90',
    paddingBottom: 30,
  },
  modalContainer: {
   flex:1,
  backgroundColor : '#F88E85',
  },
  formTextInput:{
 height:
   width:
   alignSelf: "center",
    borderColor: "#ffab91",
    borderRadius: 10,
    borderWidth: 1,
    marginTop: 20,
    padding: 10
  },
  registerButton: {
width: 200,
 height: 40,
 justifyContent: 'center,
 AlignItems: 'center',
 borderRadius: 30,
 backgroundColor: 'pink',
 shadowColor: "dark pink" ,
 elevation: 10,
  },
  registerButtonText: {
fontSize: 1
 fontWeight: 5
 color: 'black',
  },
  cancelButton: {
    width: 200,
    height: 30,
    justifyContent: "center",
    alignItems: "center",
    marginTop: 5
  },
  button: {
 width: 200,
 height: 40,
 justifyContent: 'center,
 AlignItems: 'center',
 borderRadius: 30,
 backgroundColor: 'pink',
 shadowColor: "dark pink" ,
 elevation: 10,
  },
  buttonText: {
 fontSize: 1
 fontWeight: 5
 color: 'black',
  }

})
